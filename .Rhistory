y <- y + coeff_t[i] * (x/sds[cols_i[i]]-means[cols_i[i]])
y
devtools::load_all()
plot(results, 7)
devtools::load_all()
plot(results, 7)
plot(results, 8)
plot(results, 5)
plot(results, 1)
plot(results, 2)
plot(results, 3)
plot(results, 4)
devtools::load_all()
plot(results, 5)
# Unabhängige Variablen (ohne die Zielvariable)
X <- model.matrix(~. + I(OverallQual^2),
data = cleaned_data)[,-1]  # Entfernt den Intercept
X <- X[,!colnames(X) %in% "SalePrice"]
# Zielvariable
y <- cleaned_data$SalePrice  # Passe 'Zielvariable' an den Namen deiner Zielvariable an
cv <- ridge_cv(as.matrix(X), y, m = 10, nlambda = 10000)
results <- ridge(as.matrix(X), y, lambda = 0.2)
plot(results, 5)
devtools::load_all()
plot(results, 5)
2**2
2^2
# Unabhängige Variablen (ohne die Zielvariable)
X <- model.matrix(~. +
I(OverallQual^2) +
I(OverallQual^3) +
I(OverallQual^4) +
I(OverallQual^5),
data = cleaned_data)[,-1]  # Entfernt den Intercept
X <- X[,!colnames(X) %in% "SalePrice"]
# Zielvariable
y <- cleaned_data$SalePrice  # Passe 'Zielvariable' an den Namen deiner Zielvariable an
results <- ridge(as.matrix(X), y, lambda = 0.2)
plot(results, 5)
results <- ridge(as.matrix(X), y, lambda = 1000)
plot(results, 5)
set.seed(123)
# Anzahl der Beobachtungen
n <- 100
# Generiere Prädiktoren (Unabhängige Variablen)
X1 <- rnorm(n, mean = 5, sd = 2)  # Normalverteilte Daten mit Mittelwert 5 und Standardabweichung 2
X2 <- rnorm(n, mean = 10, sd = 3) # Normalverteilte Daten mit Mittelwert 10 und Standardabweichung 3
X3 <- rnorm(n, mean = 0, sd = 1)  # Normalverteilte Daten mit Mittelwert 0 und Standardabweichung 1
set.seed(123)
# Anzahl der Beobachtungen
n <- 100
# Generiere Prädiktoren (Unabhängige Variablen)
X1 <- rnorm(n, mean = 5, sd = 2)
# Erstelle eine Zielvariable y, die eine lineare Kombination der Prädiktoren ist, plus Rauschen
y <- X1 - X1**3 + 0.2*X1**5 + rnorm(n, mean = 0, sd = 2)  # Rauschen hinzugefügt
# Kombiniere die Daten in einem Dataframe
df <- data.frame(X1 = X1, I(X1^3) = X1**3, I(X1**5) = X1**5, y = y)
X2 <- X1**3
X3 <- X1**5
# Erstelle eine Zielvariable y, die eine lineare Kombination der Prädiktoren ist, plus Rauschen
y <- X1 - X1**3 + 0.2*X1**5 + rnorm(n, mean = 0, sd = 2)  # Rauschen hinzugefügt
# Kombiniere die Daten in einem Dataframe
df <- data.frame(X1 = X1, I(X1^3) = X2, I(X1**5) = X3, y = y)
# Kombiniere die Daten in einem Dataframe
df <- data.frame("X1" = X1, "I(X1^3)" = X2, "I(X1**5)" = X3, y = y)
df
?regmodel
# Kombiniere die Daten in einem Dataframe
df <- data.frame(X1 = X1, y = y)
df
regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
res <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
r
res <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
res$coefficients/res$sd_x
res <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 1)
res$coefficients/res$sd_x
cv_l <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
cv = TRUE)
cv_l
cv_l$min_lambda
res <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 5000)
res$coefficients
res$coefficients/res$sd_x
res <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
res$coefficients
lm(formula = y ~ X1 + I(-X1^3) + I(X1^5),
+                 data = df)
lm(formula = y ~ X1 + I(-X1^3) + I(X1^5), data = df)
res$coefficients
res$coefficients/res$sd_x
plot(res, 1)
x
devtools::load_all()
plot(res, 1)
res$coefficients
devtools::load_all()
plot(res, 1)
devtools::load_all()
plot(res, 1)
devtools::load_all()
plot(res, 1)
grepl(paste0("I\\([\\+\\-]?ta\\^[1-9]+\\)"), "ta")
grepl(paste0("I\\([\+\-]?ta\\^[1-9]+\\)"), "ta")
grepl(paste0("I\\([\\+-]?ta\\^[1-9]+\\)"), "ta")
grepl("\\+", "+")
grepl("\\+\\-", "+-")
grepl("[\\+\\-]?", "+-")
devtools::load_all()
plot(res, 1)
i
cols_t[i]
grepl(paste0("I\\([\\+-]?X1\\^[1-9]+\\)"), "X1")
grepl("I\\([\\+-]?X1\\^[1-9]+\\)", "I(-X1^3)")
exponent
devtools::load_all()
plot(res, 1)
devtools::load_all()
plot(res, 1)
devtools::load_all()
plot(res, 1)
x
means[cols_i[i]]
devtools::load_all()
plot(res, 1)
y + coeff_t[i] * (((x-means[cols_i[i]])/sds[cols_i[i]])**exponent)
coeff_t["I(-X1^3)"]
y + coeff_t[i] * (((x-means[cols_i[i]])/sds[cols_i[i]])**exponent)
coeff_t
coeff_t[t]
coeff_t[i]
means[cols_i[i]]
# Anzahl der Beobachtungen
n <- 100
# Generiere Prädiktoren (Unabhängige Variablen)
X1 <- rnorm(n, mean = 5, sd = 2)
X2 <- X1**3
X3 <- X1**5
X1
# Erstelle eine Zielvariable y, die eine lineare Kombination der Prädiktoren ist, plus Rauschen
y <- X1 - X1**3 + 0.2*X1**5 + rnorm(n, mean = 0, sd = 2)  # Rauschen hinzugefügt
y
# Generiere Prädiktoren (Unabhängige Variablen)
X1 <- rnorm(n, mean = 5, sd = 2)
X2 <- -X1**3
X3 <- 0.2*X1**5
# Erstelle eine Zielvariable y, die eine lineare Kombination der Prädiktoren ist, plus Rauschen
y <- X1 + X2 + X3 + rnorm(n, mean = 0, sd = 2)  # Rauschen hinzugefügt
# Kombiniere die Daten in einem Dataframe
df <- data.frame(X1 = X1, y = y)
df
cv_l <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
cv = TRUE)
cv_l$min_lambda
res <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
res$coefficients/res$sd_x
lm(formula = y ~ X1 + I(-X1^3) + I(X1^5), data = df)
plot(res)
plot(res, 1)
# Generiere Prädiktoren (Unabhängige Variablen)
X1 <- rnorm(n, mean = 0, sd = 2)
X2 <- -X1**3
X3 <- 0.2*X1**5
# Erstelle eine Zielvariable y, die eine lineare Kombination der Prädiktoren ist, plus Rauschen
y <- X1 + X2 + X3 + rnorm(n, mean = 0, sd = 2)  # Rauschen hinzugefügt
# Kombiniere die Daten in einem Dataframe
df <- data.frame(X1 = X1, y = y)
df
res <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
res$coefficients/res$sd_x
plot(res, 1)
?runif
# Generiere Prädiktoren (Unabhängige Variablen)
X1 <- runif(n, min = -2, max = 2)
X2 <- -X1**3
X3 <- 0.2*X1**5
# Erstelle eine Zielvariable y, die eine lineare Kombination der Prädiktoren ist, plus Rauschen
y <- X1 + X2 + X3 + rnorm(n, mean = 0, sd = 2)  # Rauschen hinzugefügt
# Kombiniere die Daten in einem Dataframe
df <- data.frame(X1 = X1, y = y)
df
res <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
res$coefficients/res$sd_x
# Erstelle eine Zielvariable y, die eine lineare Kombination der Prädiktoren ist, plus Rauschen
y <- X1 + X2 + X3# + rnorm(n, mean = 0, sd = 2)  # Rauschen hinzugefügt
# Kombiniere die Daten in einem Dataframe
df <- data.frame(X1 = X1, y = y)
df
res <- regmodel(formula = y ~ X1 + I(-X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
res$coefficients/res$sd_x
plot(res,1)
devtools::load_all()
plot(res,1)
coeff_t[i]
i
x
coeff_t[i] * ((x-means[cols_i[i]])/sds[cols_i[i]])
exponent
coeff_t[i]
sds[cols_i["I(-X1^3)"]]
sds[cols_i[i]]
devtools::load_all()
plot(res,1)
devtools::load_all()
plot(res,1)
coeff_t[i]
coeff_t[i]/sds[cols_i[i]]
x
x-means[cols_i[i]]
# Generiere Prädiktoren (Unabhängige Variablen)
X1 <- runif(n, min = -2, max = 2)
X2 <- X1**3#-X1**3
X3 <- 0.2*X1**5
# Erstelle eine Zielvariable y, die eine lineare Kombination der Prädiktoren ist, plus Rauschen
y <- X1 + X2 + X3# + rnorm(n, mean = 0, sd = 2)  # Rauschen hinzugefügt
# Kombiniere die Daten in einem Dataframe
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
res$coefficients/res$sd_x
plot(res, 1)
data$SalePrice
min(data$SalePrice)
max(data$SalePrice)
sort(data$SalePrice)
plot(results, 5)
X
devtools::load_all()
plot(results, 5)
y
sort(y)
plot(res,1)
devtools::load_all()
plot(res,1)
devtools::load_all()
plot(res,1)
devtools::load_all()
plot(res,1)
coeff_t[i] * ((x-means[cols_i[i]])/sds[cols_i[i]])
coeff_t[i]
x-means[cols_i[i]]
exponent
coeff_t[i]
x-means[cols_i[i]]
y
x
(x-means[cols_i[i]])/sds[cols_i[i]]
devtools::load_all()
plot(res,1)
y
x
tuh <- -1.9347891
tuh+tuh**3
y
y[1]
t <- y[1]
t
t+x[1]^3
means[cols_i[i]]
sds[cols_i[i]]
t
coeff_t[i]
t + coeff_t[i]
t + coeff_t[i]/sds[cols_i[i]]
t + (coeff_t[i]/sds[cols_i[i]])*x[1]**2
t + (coeff_t[i]/sds[cols_i[i]])*x[1]**3
t + (coeff_t[i]/sds[cols_i[i]])*(x[1]-means[cols_t[i])**3
t + (coeff_t[i]/sds[cols_i[i]])*(x[1]-means[cols_i[i])**3
t + (coeff_t[i]/sds[cols_i[i]])*(x[1]-means[cols_i[i]])**3
t + (coeff_t[i]/sds[cols_i[i]])*(x[1]**3-means[cols_i[i]])
devtools::load_all()
plot(res,1)
devtools::load_all()
set.seed(123)
n <- 100
X1 <- runif(n, min = -2, max = 2)
X2 <- X1**3
X3 <- 0.2*X1**5
# Ohne Rauschen
y <- X1 + X2 + X3# + rnorm(n, mean = 0, sd = 2)
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
devtools::load_all()
n <- 100
X1 <- runif(n, min = -2, max = 2)
X2 <- X1**3
X3 <- 0.2*X1**5
# Ohne Rauschen
y <- X1 + X2 + X3# + rnorm(n, mean = 0, sd = 2)
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5),
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
devtools::load_all()
plot(res,1)
n <- 100
X1 <- runif(n, min = -2, max = 2)
X2 <- X1**3
X3 <- 0.2*X1**5
X4 <- 0.4*X1**6
# Ohne Rauschen
y <- X1 + X2 + X3 + X4# + rnorm(n, mean = 0, sd = 2)
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
# Ohne Rauschen
y <- X1 + X2 + X3 + X4 + rnorm(n, mean = 0, sd = 0.5)
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
# Ohne Rauschen
y <- X1 + X2 + X3 + X4 + rnorm(n, mean = 0, sd = 2)
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
n <- 1000
X1 <- runif(n, min = -2, max = 2)
X2 <- X1**3
X3 <- 0.2*X1**5
X4 <- 0.4*X1**6
# Ohne Rauschen
y <- X1 + X2 + X3 + X4
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
y <- X1 + X2 + X3 + X4 + rnorm(n, mean = 0, sd = 5)
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
Z1 <- runif(n, min = -2, max = 2)
df <- data.frame(X1 = X1, Z1 = Z1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6) + Z1,
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
Z1 <- rnorm(n, mean = 2, sd = 2)
df <- data.frame(X1 = X1, Z1 = Z1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6) + Z1,
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
Z1 <- rnorm(n, mean = 2, sd = 4)
df <- data.frame(X1 = X1, Z1 = Z1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6) + Z1,
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
res$coefficients
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "lasso",
lambda = 0)
res$coefficients
plot(res,1)
n <- 1000
X1 <- runif(n, min = -2, max = 2)
X2 <- X1**3
X3 <- 0.2*X1**5
X4 <- 0.4*X1**6
# Ohne Rauschen
y <- X1 + X2 + X3 + X4
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "lasso",
lambda = 0)
plot(res,1)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "lasso",
lambda = 0.0001)
plot(res,1)
last_error()
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6) + Z1,
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "lasso",
lambda = 0.0001)
res
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "lasso",
lambda = 0)
res
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "lasso",
lambda = 0.0001)
plot(res,1)
devtools::load_all()
plot(res,1)
usethis::use_r("plot.lasso")
usethis::use_r("plot.lasso.R")
devtools::load_all()
plot(res,1)
class(res)
devtools::install()
devtools::load_all()
set.seed(123)
n <- 1000
X1 <- runif(n, min = -2, max = 2)
X2 <- X1**3
X3 <- 0.2*X1**5
X4 <- 0.4*X1**6
# Ohne Rauschen
y <- X1 + X2 + X3 + X4
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "lasso",
lambda = 0.0001)
plot(res,1)
devtools::load_all()
plot(res,1)
res
browser()
plot(res,1)
browser()
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
n <- 1000
X1 <- runif(n, min = -2, max = 2)
X2 <- X1**3
X3 <- 0.2*X1**5
X4 <- 0.4*X1**6
# Ohne Rauschen
y <- X1 + X2 + X3 + X4
df <- data.frame(X1 = X1, y = y)
res <- regmodel(formula = y ~ X1 + I(X1^3) + I(X1^5) + I(X1^6),
data = df,
model = "ridge",
lambda = 0)
plot(res,1)
devtools::install()
plot(res,1)
print(res)
devtools::install()
devtools::load_all()
devtools::uninstall()
devtools::load_all()
